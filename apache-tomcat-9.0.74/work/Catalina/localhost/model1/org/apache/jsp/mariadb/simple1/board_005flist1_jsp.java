/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-02 02:41:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mariadb.simple1;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model1.BoardDTO;
import model1.BoardDAO;
import model1.BoardListDTO;
import java.util.ArrayList;

public final class board_005flist1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model1.BoardDTO");
    _jspx_imports_classes.add("model1.BoardListDTO");
    _jspx_imports_classes.add("model1.BoardDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");


	int cpage = 1;

	if(request.getParameter("cpage") != null && !request.getParameter("cpage").equals("")) {
		cpage = Integer.parseInt(request.getParameter("cpage"));
	}
	
	BoardListDTO boardListDTO = new BoardListDTO();
	boardListDTO.setCpage(cpage);
	
	BoardDAO dao = new BoardDAO();
	// select query
	boardListDTO = dao.boardListDTO(boardListDTO);
	
	// 페이지 구성요소
	int recordPerPage = boardListDTO.getRecordPerPage();
	int totalRecord = boardListDTO.getTotalRecord();
	int totalPage = boardListDTO.getTotalPage();
	int blockPerPage = boardListDTO.getBlockPerPage();
	int startBlock = boardListDTO.getStartBlock();
	int endBlock = boardListDTO.getEndBlock();
	
	ArrayList<BoardDTO> boardLists = boardListDTO.getBoardLists();
	
	StringBuilder sbHtml = new StringBuilder();
	
	for(BoardDTO dto : boardLists){
		String seq = dto.getSeq();
		String subject = dto.getSubject();
		String writer = dto.getWriter();
		String wdate = dto.getWdate();
		String hit = dto.getHit();
		int wgap = dto.getWgap();
		
		 sbHtml.append("<tr>");
		 sbHtml.append("<td>&nbsp;</td>");
		 sbHtml.append("<td>" + seq + "</td>");
		 sbHtml.append("<td class='left'>");
		 sbHtml.append("<a href='board_view1.jsp?cpage=" + cpage + "&seq=" + seq + "'>" + subject + "</a>");
		 
		 if(wgap == 0) {
			 sbHtml.append("&nbsp;<img src='../../images/icon_new.gif' alt='NEW'>");
		 }
		
		 sbHtml.append("</td>");
		 sbHtml.append("<td>" + writer + "</td>");
		 sbHtml.append("<td>" + wdate + "</td>");
		 sbHtml.append("<td>" + hit + "</td>");
		 sbHtml.append("<td>&nbsp;</td>");
		 sbHtml.append("</tr>");
	}

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/board.css\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("<!-- 상단 디자인 -->\n");
      out.write("<div class=\"con_title\">\n");
      out.write("	<h3>게시판</h3>\n");
      out.write("	<p>HOME &gt; 게시판 &gt; <strong>게시판</strong></p>\n");
      out.write("</div>\n");
      out.write("<div class=\"con_txt\">\n");
      out.write("	<div class=\"contents_sub\">\n");
      out.write("		<div class=\"board_top\">\n");
      out.write("			<div class=\"bold\">총 <span class=\"txt_orange\">");
      out.print( totalRecord );
      out.write("</span>건</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<!--게시판-->\n");
      out.write("		<div class=\"board\">\n");
      out.write("			<table>\n");
      out.write("			<tr>\n");
      out.write("				<th width=\"3%\">&nbsp;</th>\n");
      out.write("				<th width=\"5%\">번호</th>\n");
      out.write("				<th>제목</th>\n");
      out.write("				<th width=\"10%\">글쓴이</th>\n");
      out.write("				<th width=\"17%\">등록일</th>\n");
      out.write("				<th width=\"5%\">조회</th>\n");
      out.write("				<th width=\"3%\">&nbsp;</th>\n");
      out.write("			</tr>\n");
      out.write("			<!-- 내용 시작-->\n");
      out.write("			");
      out.print( sbHtml );
      out.write("\n");
      out.write("			\n");
      out.write("			<!-- 내용 끝 -->\n");
      out.write("			</table>\n");
      out.write("		</div>	\n");
      out.write("\n");
      out.write("		<div class=\"btn_area\">\n");
      out.write("			<div class=\"align_right\">\n");
      out.write("				<input type=\"button\" value=\"쓰기\" class=\"btn_write btn_txt01\" style=\"cursor: pointer;\" onclick=\"location.href='board_write1.jsp?cpage=");
      out.print( cpage );
      out.write("'\" />\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			<!--페이지넘버-->\n");
      out.write("		<div class=\"paginate_regular\">\n");
      out.write("			<div align=\"absmiddle\">\n");
      out.write("				\n");
      out.write("				");

					if(startBlock == 1) {
						out.println("<span><a>&lt;&lt;</a></span>");
					} else {
						out.println("<span><a href='board_list1.jsp?cpage=" + (startBlock - blockPerPage) + "'>&lt;&lt;</a></span>");
					}
					
					out.println("&nbsp;");
					
					if(cpage == 1) {
						out.println("<span><a>&lt;</a></span>");
					} else {
						out.println("<span><a href='board_list1.jsp?cpage=" + (cpage - 1) + "'>&lt;</a></span>");
					}
				
					out.println("&nbsp;&nbsp;");
				
					for(int i = startBlock; i <= endBlock; i++) {
						if(cpage == i) {
							out.println("<span><a>[ " + i + " ]</a></span>");
						} else {
							out.println("<span><a href='board_list1.jsp?cpage=" + i + "'>" + i + "</a></span>");
						}
					}
					
				
					out.println("&nbsp;&nbsp;");
					
					if(cpage == totalPage) {
						out.println("<span><a>&gt;</a></span>");
					} else {
						out.println("<span><a href='board_list1.jsp?cpage=" + (cpage + 1) + "'>&gt;</a></span>");
					}
					
					out.println("&nbsp;");
					if(startBlock == endBlock) {
						out.println("<span><a>&gt;&gt;</a></span>");
					} else {
						out.println("<span><a href='board_list1.jsp?cpage=" + (startBlock + blockPerPage) + "'>&gt;&gt;</a></span>");
					}
				
      out.write("\n");
      out.write("				\n");
      out.write("				\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<!--//페이지넘버-->\n");
      out.write("		\n");
      out.write("		</div>\n");
      out.write("		<!--//게시판-->\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("<!--//하단 디자인 -->\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
